---
- hosts: all
  become: true
  tasks:
    - name: Update system
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: yes
    - name: print message
      ansible.builtin.debug:
        msg: "complete task"

    - name: Set UTC +5
      ansible.builtin.timezone:
        name: Asia/Dushanbe

    - name: Check set UTC +5
      shell: timedatectl | grep "Time zone"
      register: timezone_out

    - name: Display set Time zone
      ansible.builtin.debug:
        var: timezone_out.stdout_lines

    - name: Install software
      ansible.builtin.apt:
        name: "{{ package }}"
      vars:
        package:
        - mc
        - wget
        - tar
        - ufw
        - nginx
        state: latest

    - name: Check install mc software
      shell: dpkg -s mc | head -n 2
      register: software_mc_out

    - name: Display check install mc software
      ansible.builtin.debug:
        var: software_mc_out.stdout_lines

    - name: Check install wget software
      shell: dpkg -s wget | head -n 2
      register: software_wget_out
    - name: Display check install wget software
      ansible.builtin.debug:
        var: software_wget_out.stdout_lines

    - name: Check install tar software
      shell: dpkg -s tar | head -n 2
      register: software_tar_out
    - name: Display check install tar software
      ansible.builtin.debug:
        var: software_tar_out.stdout_lines


    - name: Check install ufw software
      shell: dpkg -s ufw | head -n 2                                              
      register: software_ufw_out                                                  
    - name: Display check install ufw software
      ansible.builtin.debug:
        var: software_ufw_out.stdout_lines

    - name: Check install nginx software
      shell: dpkg -s nginx | head -n 2
      register: software_nginx_out
    - name: Display check install nginx software
      ansible.builtin.debug:
        var: software_nginx_out.stdout_lines

    - name: enable ufw
      community.general.ufw:
        state: enabled
        policy: allow
    - name: print message
      ansible.builtin.debug:
        msg: "complete task"

    - name: enable http port
      community.general.ufw:
         rule: allow
         port: '80'
         proto: tcp
    - name: print message
      ansible.builtin.debug:
        msg: "complete task"

    - name: enable https port
      community.general.ufw:
         rule: allow
         port: '443'
         proto: tcp
    - name: print message
      ansible.builtin.debug:
        msg: "complete task"

    - name: download github repo
      ansible.builtin.unarchive:
        src: 'https://github.com/belov11/momentum/archive/refs/heads/main.zip'
        dest: /var/www/html/
        remote_src: yes
    - name: print message
      ansible.builtin.debug:
        msg: "complete task"

    - name: Replace a string with var/www/
      ansible.builtin.lineinfile:
        path: /etc/nginx/sites-available/default
        regexp: '^(\s*)root\s+/var/www/html'
        line: 'root /var/www/html/momentum-main;'
    - name: print message
      ansible.builtin.debug:
        msg: "complete task"

    - name: Restart nginx service
      ansible.builtin.service:
        name: nginx
        state: restarted
    - name: print message
      ansible.builtin.debug:
        msg: "complete task"

    - name: add the users and add to sudo group
      ansible.builtin.user:
        name: "{{ item }}"
        groups: sudo
        append: yes
      loop:
        - Devopsina
        - Gerzzzorg
    - name: print message
      ansible.builtin.debug:
        msg: "complete task"

    - name: authorize users to folder
      ansible.builtin.file:
        path: /var/www/html
        state: directory
        recurse: yes
        owner: root
        group: sudo
        mode: '0755'
    - name: print message
      ansible.builtin.debug:
        msg: "complete task"
